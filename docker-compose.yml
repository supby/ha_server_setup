version: "3.8"
services:
  mqtt:
    container_name: ${CLUSTER_NAME:?required}_mqtt
    image: eclipse-mosquitto
    entrypoint: >
        sh -c "mkdir -p /etc/mosquitto &&
               chown mosquitto /etc/mosquitto/ &&               
               mosquitto_passwd -c -b /etc/mosquitto/passwd ${MQTT_USER:?required} ${MQTT_PASSWORD:?required} &&
               chown mosquitto /etc/mosquitto/passwd &&
               chmod 0700 /etc/mosquitto/passwd &&
               /usr/sbin/mosquitto -c /mosquitto/config/mosquitto.conf"
    restart: unless-stopped
    networks:
      - internal
    ports:
      - "1884:1884"
    volumes:
      - ./ha_server_data/mosquitto/config:/mosquitto/config
      - ./ha_server_data/mosquitto/data:/mosquitto/data
      - ./ha_server_data/mosquitto/log:/mosquitto/log

  zigbee2mqtt:
    container_name: ${CLUSTER_NAME:?required}_zigbee2mqtt
    image: koenkk/zigbee2mqtt
    networks:
      - internal
    restart: unless-stopped
    devices:
      - ${Z2M_DEV:?required}:/dev/ttyACM0
    ports:
      - 8081:8080
    volumes:
      - ./ha_server_data/zigbee2mqtt_data:/app/data
      - /run/udev:/run/udev:ro
    environment:
      - TZ=Europe/Warsaw
    depends_on:
      - mqtt

  zigbee2mqtt_2:
    container_name: ${CLUSTER_NAME:?required}_zigbee2mqtt_2
    image: koenkk/zigbee2mqtt
    networks:
      - internal
    restart: unless-stopped
    devices:      
      - ${Z2M_2_DEV:?required}:/dev/ttyACM0
    ports:
      - 8082:8080
    volumes:
      - ./ha_server_data/zigbee2mqtt_2_data:/app/data
      - /run/udev:/run/udev:ro
    environment:
      - TZ=Europe/Warsaw
    depends_on:
      - mqtt

  webthings-gateway:
    container_name: ${CLUSTER_NAME:?required}_webthings-gateway
    image: webthingsio/gateway:latest
    restart: unless-stopped
    networks:
      - internal
    ports:
      - "8080:8080"
      - "4443:4443"
    environment:
      - TZ=Europe/Warsaw
    volumes:
      - ./ha_server_data/webthings:/home/node/.webthings
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "10"

  node-red:
    container_name: ${CLUSTER_NAME:?required}_node-red
    image: nodered/node-red:latest
    restart: unless-stopped
    networks:
      - internal
    environment:
      - TZ=Europe/Warsaw
    ports:
      - "1880:1880"
    volumes:
      - ./ha_server_data/nodered_data:/data
      - /var/run/avahi-daemon/socket:/var/run/avahi-daemon/socket
      

  influxdb:
    container_name: ${CLUSTER_NAME:?required}_influxdb
    image: influxdb:latest
    restart: unless-stopped
    networks:
      - internal
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME:?required}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD:?required}
      - DOCKER_INFLUXDB_INIT_ORG=sensors_data
      - DOCKER_INFLUXDB_INIT_BUCKET=sensors_data
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_TOKEN:?required}
    volumes:      
      - ./ha_server_data/influx/data:/var/lib/influxdb2
      - ./ha_server_data/influx/config:/etc/influxdb2
    ports:
      - "8086:8086"

  grafana:
    image: grafana/grafana-enterprise
    container_name: ${CLUSTER_NAME:?required}_grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - ./ha_server_data/grafana/config:/etc/grafana
      - ./ha_server_data/grafana/data:/var/lib/grafana
    networks:
      - internal

  mdns-reflector:
    container_name: ${CLUSTER_NAME:?required}_mdns-reflector
    image: flungo/avahi
    restart: unless-stopped
    environment:
      - REFLECTOR_ENABLE_REFLECTOR=yes
    networks:
      internal:
      physical:
        ipv4_address: 192.168.1.199

  home-assistant:
    container_name: ${CLUSTER_NAME:?required}_home-assistant
    image: ghcr.io/home-assistant/home-assistant:stable
    restart: unless-stopped
    ports:
      - "8123:8123"
    networks:
      - internal
    volumes:
      - ./ha_server_data/homeassistant:/config
    environment:
      - TZ=Europe/Warsaw

networks:
  internal:
    name: internal
    driver: bridge

  physical:
    name: physical
    driver: macvlan
    driver_opts:
      parent: ${HOST_PHY_INTERFACE:?required}
    ipam:
      config:
        - subnet: "192.168.1.0/24"
          gateway: "192.168.1.1"

    
    
      
